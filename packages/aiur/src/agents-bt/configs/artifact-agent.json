{
  "type": "message_handler",
  "name": "ArtifactBTAgent_Configuration",
  "description": "Behavior tree configuration for artifact agent reactive processing workflows",
  "debugMode": false,

  "routes": {
    "get_artifacts": {
      "type": "sequence",
      "name": "retrieve_artifacts_workflow",
      "description": "Retrieve and send all stored artifacts",
      "children": [
        {
          "type": "artifact_storage",
          "name": "get_all_artifacts",
          "action": "get_all",
          "includeMetadata": true,
          "description": "Get all stored artifacts with metadata"
        },
        {
          "type": "response_sender",
          "name": "send_artifacts_list",
          "responseType": "artifacts_list",
          "includeArtifactData": true,
          "description": "Send artifacts list to client"
        }
      ]
    },

    "request_artifacts": {
      "type": "get_artifacts",
      "description": "Alias for get_artifacts"
    },

    "clear_artifacts": {
      "type": "sequence",
      "name": "clear_artifacts_workflow",
      "description": "Clear all artifacts and notify clients",
      "children": [
        {
          "type": "artifact_storage",
          "name": "clear_all_artifacts",
          "action": "clear_all",
          "description": "Clear all stored artifacts"
        },
        {
          "type": "artifact_sync",
          "name": "notify_artifacts_cleared",
          "action": "notify_cleared",
          "broadcastToClients": true,
          "description": "Notify all clients that artifacts were cleared"
        },
        {
          "type": "response_sender",
          "name": "confirm_artifacts_cleared",
          "responseType": "artifacts_cleared",
          "content": "All artifacts have been cleared",
          "description": "Confirm artifacts clearing"
        }
      ]
    },

    "artifact_created": {
      "type": "sequence",
      "name": "handle_artifact_created_event",
      "description": "Process newly created artifacts from tools",
      "children": [
        {
          "type": "selector",
          "name": "artifact_creation_strategy",
          "description": "Handle single or multiple artifacts",
          "children": [
            {
              "type": "sequence",
              "name": "process_multiple_artifacts",
              "condition": "Array.isArray(message.artifacts)",
              "children": [
                {
                  "type": "artifact_storage",
                  "name": "store_multiple_artifacts",
                  "action": "store_multiple",
                  "artifacts": "{{message.artifacts}}",
                  "updateLabels": true,
                  "description": "Store multiple artifacts with label updates"
                },
                {
                  "type": "artifact_sync",
                  "name": "sync_multiple_artifacts",
                  "action": "notify_frontend",
                  "eventType": "artifact_created",
                  "artifacts": "{{message.artifacts}}",
                  "description": "Notify frontend of multiple new artifacts"
                }
              ]
            },
            {
              "type": "sequence",
              "name": "process_single_artifact",
              "children": [
                {
                  "type": "artifact_storage",
                  "name": "store_single_artifact",
                  "action": "store",
                  "artifact": "{{message.artifact}}",
                  "updateLabels": true,
                  "description": "Store single artifact with label update"
                },
                {
                  "type": "artifact_sync", 
                  "name": "sync_single_artifact",
                  "action": "notify_frontend",
                  "eventType": "artifact_created",
                  "artifact": "{{message.artifact}}",
                  "description": "Notify frontend of new artifact"
                }
              ]
            }
          ]
        }
      ]
    },

    "artifact_updated": {
      "type": "sequence",
      "name": "handle_artifact_updated_event",
      "description": "Process artifact updates",
      "children": [
        {
          "type": "artifact_storage",
          "name": "update_artifact",
          "action": "update",
          "artifact": "{{message.artifact}}",
          "preserveHistory": true,
          "description": "Update artifact while preserving history"
        },
        {
          "type": "selector",
          "name": "update_notification_strategy",
          "description": "Choose how to notify about update",
          "children": [
            {
              "type": "sequence",
              "name": "label_changed_notification",
              "condition": "message.artifact.labelChanged",
              "children": [
                {
                  "type": "artifact_sync",
                  "name": "sync_label_change",
                  "action": "notify_frontend",
                  "eventType": "artifact_label_changed",
                  "artifact": "{{message.artifact}}",
                  "description": "Notify frontend of label change"
                }
              ]
            },
            {
              "type": "artifact_sync",
              "name": "sync_standard_update",
              "action": "notify_frontend",
              "eventType": "artifact_updated",
              "artifact": "{{message.artifact}}",
              "description": "Notify frontend of standard update"
            }
          ]
        }
      ]
    },

    "artifact_deleted": {
      "type": "sequence",
      "name": "handle_artifact_deleted_event",
      "description": "Process artifact deletion",
      "children": [
        {
          "type": "artifact_storage",
          "name": "delete_artifact",
          "action": "delete",
          "artifactId": "{{message.artifactId}}",
          "description": "Delete artifact from storage"
        },
        {
          "type": "artifact_sync",
          "name": "sync_deletion",
          "action": "notify_frontend",
          "eventType": "artifact_deleted",
          "artifactId": "{{message.artifactId}}",
          "description": "Notify frontend of artifact deletion"
        }
      ]
    },

    "sync_artifacts": {
      "type": "sequence",
      "name": "manual_sync_workflow",
      "description": "Manually trigger artifact synchronization",
      "children": [
        {
          "type": "artifact_storage",
          "name": "get_all_for_sync",
          "action": "get_all",
          "includeMetadata": true,
          "description": "Get all artifacts for sync"
        },
        {
          "type": "artifact_sync",
          "name": "perform_full_sync",
          "action": "full_sync",
          "artifacts": "{{allArtifacts}}",
          "description": "Perform full synchronization with frontend"
        },
        {
          "type": "response_sender",
          "name": "confirm_sync_complete",
          "responseType": "sync_complete",
          "content": "Artifact synchronization completed",
          "artifactCount": "{{allArtifacts.length}}",
          "description": "Confirm sync completion"
        }
      ]
    }
  },

  "defaultRoute": {
    "type": "sequence",
    "name": "handle_unknown_artifact_message",
    "description": "Handle unrecognized artifact message types",
    "children": [
      {
        "type": "error_handler",
        "name": "log_unknown_artifact_message",
        "strategy": "report",
        "reportErrors": true,
        "description": "Log the unknown message type"
      },
      {
        "type": "response_sender",
        "name": "send_artifact_unknown_message_error",
        "responseType": "error",
        "content": "Unknown artifact message type: {{messageType}}. Available types: get_artifacts, request_artifacts, clear_artifacts, artifact_created, artifact_updated, artifact_deleted, sync_artifacts",
        "description": "Inform client about unknown message type"
      }
    ]
  },

  "configuration": {
    "fallbackBehavior": "error",
    "logUnroutedMessages": true,
    "routingStrategy": "exact_match",
    "maxArtifacts": 1000,
    "enableAutoCleanup": true,
    "cleanupInterval": 3600000,
    "enableSyncNotifications": true,
    "enableReactiveProcessing": true,
    "preserveArtifactHistory": true
  },

  "errorHandling": {
    "strategy": "report",
    "maxRetries": 1,
    "retryDelay": 500,
    "reportErrors": true,
    "continueOnArtifactErrors": true
  },

  "artifactProcessing": {
    "enableAutoDetection": true,
    "enableAutoStorage": true,
    "enableLabelGeneration": true,
    "supportedTypes": [
      "image",
      "code", 
      "text",
      "data",
      "web",
      "file"
    ],
    "maxArtifactSize": 10485760,
    "enableCompression": true
  },

  "synchronization": {
    "enableRealTimeSync": true,
    "batchSyncInterval": 5000,
    "maxBatchSize": 50,
    "enableConflictResolution": true,
    "syncStrategy": "immediate"
  },

  "metadata": {
    "version": "1.0.0",
    "author": "Legion BT System",
    "description": "Artifact agent workflow for reactive artifact processing, storage, and synchronization",
    "capabilities": [
      "artifact_storage",
      "artifact_retrieval", 
      "artifact_synchronization",
      "reactive_processing",
      "auto_detection",
      "label_management"
    ]
  }
}