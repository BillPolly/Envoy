{
  "type": "test_scenario",
  "name": "ArtifactBTAgent Reactive Processing Test",
  "description": "Test ArtifactBTAgent's artifact storage, retrieval, and synchronization capabilities",
  "version": "1.0.0",
  
  "configuration": {
    "timeout": 15000,
    "debugMode": true,
    "continueOnFailure": false
  },

  "setup": {
    "type": "sequence",
    "name": "artifact_test_setup",
    "children": [
      {
        "type": "mock_environment",
        "name": "create_artifact_environment",
        "action": "setup",
        "environmentId": "artifact_test_env",
        "mockServices": [
          {
            "name": "artifactService",
            "type": "custom",
            "responses": {
              "store_artifact": {
                "success": true,
                "id": "artifact_123",
                "stored": true
              },
              "get_all_artifacts": {
                "success": true,
                "artifacts": [
                  {
                    "id": "artifact_123",
                    "type": "code",
                    "label": "@test_file",
                    "content": "console.log('test');"
                  }
                ]
              }
            }
          }
        ],
        "mockData": {
          "sessionId": "artifact-session-789",
          "testArtifact": {
            "id": "test_artifact_001",
            "type": "code",
            "label": "@example_code",
            "content": "function hello() { return 'world'; }",
            "filename": "example.js"
          },
          "multipleArtifacts": [
            {
              "id": "artifact_001",
              "type": "text",
              "label": "@readme",
              "content": "This is a README file"
            },
            {
              "id": "artifact_002",
              "type": "image",
              "label": "@diagram",
              "content": "base64_encoded_image_data"
            }
          ]
        }
      }
    ]
  },

  "tests": {
    "type": "sequence",
    "name": "artifact_agent_tests",
    "children": [
      {
        "type": "sequence",
        "name": "test_get_artifacts",
        "description": "Test retrieving all stored artifacts",
        "children": [
          {
            "type": "send_message",
            "name": "request_artifacts",
            "targetAgent": "artifactAgent",
            "messageType": "get_artifacts",
            "messageData": {},
            "waitForResponse": true,
            "responseTimeout": 5000
          },
          {
            "type": "assert_response",
            "name": "validate_artifacts_list",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "artifacts_list",
                "description": "Should respond with artifacts_list type"
              },
              {
                "field": "artifacts",
                "type": "exists",
                "description": "Should contain artifacts array"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_single_artifact_creation",
        "description": "Test processing single artifact creation event",
        "children": [
          {
            "type": "send_message",
            "name": "create_single_artifact",
            "targetAgent": "artifactAgent",
            "messageType": "artifact_created",
            "messageData": {
              "artifact": "{{mockData.testArtifact}}"
            },
            "waitForResponse": true,
            "responseTimeout": 8000
          },
          {
            "type": "assert_response",
            "name": "validate_single_artifact_processing",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "contains",
                "expected": "artifact",
                "description": "Should contain artifact-related response"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_multiple_artifacts_creation",
        "description": "Test processing multiple artifacts creation event",
        "children": [
          {
            "type": "send_message",
            "name": "create_multiple_artifacts",
            "targetAgent": "artifactAgent",
            "messageType": "artifact_created",
            "messageData": {
              "artifacts": "{{mockData.multipleArtifacts}}"
            },
            "waitForResponse": true,
            "responseTimeout": 10000
          },
          {
            "type": "assert_response",
            "name": "validate_multiple_artifacts_processing",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "artifacts",
                "type": "exists",
                "description": "Should process multiple artifacts"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_artifact_update",
        "description": "Test artifact update processing",
        "children": [
          {
            "type": "send_message",
            "name": "update_artifact",
            "targetAgent": "artifactAgent",
            "messageType": "artifact_updated",
            "messageData": {
              "artifact": {
                "id": "{{mockData.testArtifact.id}}",
                "type": "{{mockData.testArtifact.type}}",
                "label": "@updated_example_code",
                "content": "function hello() { return 'updated world'; }",
                "labelChanged": true
              }
            },
            "waitForResponse": true,
            "responseTimeout": 5000
          },
          {
            "type": "assert_response",
            "name": "validate_artifact_update",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "contains",
                "expected": "artifact",
                "description": "Should handle artifact update"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_artifact_deletion",
        "description": "Test artifact deletion processing",
        "children": [
          {
            "type": "send_message",
            "name": "delete_artifact",
            "targetAgent": "artifactAgent",
            "messageType": "artifact_deleted",
            "messageData": {
              "artifactId": "{{mockData.testArtifact.id}}"
            },
            "waitForResponse": true,
            "responseTimeout": 5000
          },
          {
            "type": "assert_response",
            "name": "validate_artifact_deletion",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "artifactId",
                "type": "equals",
                "expected": "test_artifact_001",
                "description": "Should confirm deletion of correct artifact"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_clear_all_artifacts",
        "description": "Test clearing all artifacts",
        "children": [
          {
            "type": "send_message",
            "name": "clear_artifacts",
            "targetAgent": "artifactAgent",
            "messageType": "clear_artifacts",
            "messageData": {},
            "waitForResponse": true,
            "responseTimeout": 5000
          },
          {
            "type": "assert_response",
            "name": "validate_clear_artifacts",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "artifacts_cleared",
                "description": "Should confirm artifacts were cleared"
              },
              {
                "field": "content",
                "type": "contains",
                "expected": "cleared",
                "description": "Should mention artifacts being cleared"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_sync_artifacts",
        "description": "Test manual artifact synchronization",
        "children": [
          {
            "type": "send_message",
            "name": "sync_artifacts",
            "targetAgent": "artifactAgent",
            "messageType": "sync_artifacts",
            "messageData": {},
            "waitForResponse": true,
            "responseTimeout": 8000
          },
          {
            "type": "assert_response",
            "name": "validate_sync_complete",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "sync_complete",
                "description": "Should confirm synchronization completion"
              },
              {
                "field": "content",
                "type": "contains",
                "expected": "synchronization completed",
                "description": "Should confirm sync completion message"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_unknown_artifact_message",
        "description": "Test handling of unknown artifact message types",
        "children": [
          {
            "type": "send_message",
            "name": "send_unknown_artifact_message",
            "targetAgent": "artifactAgent",
            "messageType": "unknown_artifact_message",
            "messageData": {},
            "waitForResponse": true,
            "responseTimeout": 3000
          },
          {
            "type": "assert_response",
            "name": "validate_unknown_artifact_message",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "error",
                "description": "Should respond with error for unknown message"
              },
              {
                "field": "content",
                "type": "contains",
                "expected": "Unknown artifact message type",
                "description": "Should explain the unknown message type"
              }
            ]
          }
        ]
      }
    ]
  },

  "teardown": {
    "type": "sequence",
    "name": "artifact_test_teardown",
    "children": [
      {
        "type": "mock_environment",
        "name": "cleanup_artifact_environment",
        "action": "teardown",
        "environmentId": "artifact_test_env"
      }
    ]
  },

  "metadata": {
    "author": "Legion BT Testing System",
    "created": "2024-01-01T00:00:00Z",
    "tags": ["artifacts", "storage", "synchronization", "reactive"],
    "requirements": [
      "ArtifactBTAgent must be registered as 'artifactAgent'",
      "Mock artifact manager must be configured",
      "Artifact storage and sync capabilities should be available"
    ]
  }
}