{
  "type": "test_scenario",
  "name": "ChatBTAgent Basic Functionality Test",
  "description": "Test ChatBTAgent's core conversation and tool execution capabilities",
  "version": "1.0.0",
  
  "configuration": {
    "timeout": 30000,
    "debugMode": true,
    "continueOnFailure": false
  },

  "setup": {
    "type": "sequence",
    "name": "test_setup",
    "children": [
      {
        "type": "mock_environment",
        "name": "create_test_environment",
        "action": "setup",
        "environmentId": "chat_test_env",
        "mockServices": [
          {
            "name": "llmService",
            "type": "custom",
            "responses": {
              "chat_completion": {
                "content": "Hello! I'm a mock LLM response. I can help you with various tasks.",
                "role": "assistant"
              }
            }
          }
        ],
        "mockData": {
          "sessionId": "test-session-123",
          "userId": "test-user"
        }
      }
    ]
  },

  "tests": {
    "type": "sequence",
    "name": "chat_agent_tests",
    "children": [
      {
        "type": "sequence",
        "name": "test_basic_chat_message",
        "description": "Test basic chat message handling",
        "children": [
          {
            "type": "send_message",
            "name": "send_chat_message",
            "targetAgent": "chatAgent",
            "messageType": "chat_message",
            "messageContent": "Hello, how are you today?",
            "messageData": {
              "sessionId": "{{mockData.sessionId}}",
              "userId": "{{mockData.userId}}"
            },
            "waitForResponse": true,
            "responseTimeout": 10000
          },
          {
            "type": "assert_response",
            "name": "validate_chat_response",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "chat_response",
                "description": "Response type should be chat_response"
              },
              {
                "field": "content",
                "type": "exists",
                "description": "Response should have content"
              },
              {
                "field": "sessionId",
                "type": "equals",
                "expected": "test-session-123",
                "description": "Session ID should be preserved"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_tool_execution_request",
        "description": "Test chat agent's tool execution capability",
        "children": [
          {
            "type": "send_message",
            "name": "request_tool_execution",
            "targetAgent": "chatAgent",
            "messageType": "chat_message",
            "messageContent": "Can you read the file /test/path/example.txt for me?",
            "messageData": {
              "sessionId": "{{mockData.sessionId}}",
              "expectsTools": true
            },
            "waitForResponse": true,
            "responseTimeout": 15000
          },
          {
            "type": "assert_response",
            "name": "validate_tool_execution_response",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "contains",
                "expected": "response",
                "description": "Should contain some form of response"
              },
              {
                "field": "toolsUsed",
                "type": "exists",
                "description": "Should indicate tools were used"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_conversation_memory",
        "description": "Test conversation history management",
        "children": [
          {
            "type": "send_message",
            "name": "first_message",
            "targetAgent": "chatAgent",
            "messageType": "chat_message",
            "messageContent": "My name is Alice and I like programming.",
            "messageData": {
              "sessionId": "{{mockData.sessionId}}"
            },
            "waitForResponse": true
          },
          {
            "type": "send_message",
            "name": "follow_up_message",
            "targetAgent": "chatAgent",
            "messageType": "chat_message",
            "messageContent": "What is my name and what do I like?",
            "messageData": {
              "sessionId": "{{mockData.sessionId}}"
            },
            "waitForResponse": true,
            "storeResponse": true,
            "responseKey": "memoryTestResponse"
          },
          {
            "type": "assert_response",
            "name": "validate_memory_recall",
            "dataSource": "memoryTestResponse",
            "assertions": [
              {
                "field": "content",
                "type": "contains",
                "expected": "Alice",
                "description": "Should remember the name Alice"
              },
              {
                "field": "content",
                "type": "contains",
                "expected": "programming",
                "description": "Should remember the interest in programming"
              }
            ]
          }
        ]
      },

      {
        "type": "sequence",
        "name": "test_error_handling",
        "description": "Test error handling for invalid messages",
        "children": [
          {
            "type": "send_message",
            "name": "send_invalid_message",
            "targetAgent": "chatAgent",
            "messageType": "unknown_message_type",
            "messageContent": "This should trigger error handling",
            "waitForResponse": true,
            "responseTimeout": 5000
          },
          {
            "type": "assert_response",
            "name": "validate_error_handling",
            "dataSource": "lastResponse",
            "assertions": [
              {
                "field": "type",
                "type": "equals",
                "expected": "error",
                "description": "Should return error response for unknown message type"
              },
              {
                "field": "content",
                "type": "contains",
                "expected": "unknown",
                "description": "Error message should mention unknown message type"
              }
            ]
          }
        ]
      }
    ]
  },

  "teardown": {
    "type": "sequence",
    "name": "test_teardown",
    "children": [
      {
        "type": "mock_environment",
        "name": "cleanup_test_environment",
        "action": "teardown",
        "environmentId": "chat_test_env"
      }
    ]
  },

  "metadata": {
    "author": "Legion BT Testing System",
    "created": "2024-01-01T00:00:00Z",
    "tags": ["chat", "conversation", "tools", "memory"],
    "requirements": [
      "ChatBTAgent must be registered as 'chatAgent'",
      "Mock LLM service must be configured",
      "Session management must be available"
    ]
  }
}