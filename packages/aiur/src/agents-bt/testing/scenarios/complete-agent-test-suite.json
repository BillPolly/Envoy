{
  "type": "suite",
  "name": "Complete BT Agents Test Suite",
  "description": "Comprehensive test suite for all BT-based agents in the Aiur server",
  "version": "1.0.0",
  
  "configuration": {
    "timeout": 60000,
    "debugMode": true,
    "stopOnFailure": false,
    "parallelExecution": false,
    "cleanupAfterTests": true
  },

  "setup": {
    "type": "sequence",
    "name": "suite_setup",
    "description": "Set up testing environment for all agents",
    "children": [
      {
        "type": "mock_environment",
        "name": "create_shared_environment",
        "action": "setup",
        "environmentId": "shared_test_env",
        "mockServices": [
          {
            "name": "sharedLLMService",
            "type": "custom",
            "responses": {
              "chat_completion": {
                "content": "This is a shared mock LLM response for testing.",
                "role": "assistant"
              }
            }
          },
          {
            "name": "sharedToolService", 
            "type": "custom",
            "responses": {
              "file_read": {
                "success": true,
                "content": "Shared mock file content",
                "filePath": "/shared/test/file.txt"
              },
              "directory_list": {
                "success": true,
                "files": ["shared1.txt", "shared2.js"],
                "path": "/shared/test/"
              }
            }
          }
        ],
        "mockData": {
          "sharedSessionId": "suite-session-999",
          "testRunId": "{{Date.now()}}"
        }
      }
    ]
  },

  "tests": [
    {
      "type": "test_scenario",
      "name": "ChatBTAgent Integration Test",
      "description": "Validate ChatBTAgent works correctly in isolated environment",
      "timeout": 20000,
      
      "configuration": {
        "debugMode": true
      },

      "tests": {
        "type": "sequence",
        "name": "chat_integration_tests",
        "children": [
          {
            "type": "sequence",
            "name": "test_chat_basic_functionality",
            "children": [
              {
                "type": "send_message",
                "name": "send_greeting",
                "targetAgent": "chatAgent",
                "messageType": "chat_message",
                "messageContent": "Hello, I'm testing the chat agent.",
                "messageData": {
                  "sessionId": "{{sharedSessionId}}",
                  "testType": "integration"
                },
                "waitForResponse": true,
                "responseTimeout": 10000
              },
              {
                "type": "assert_response",
                "name": "validate_chat_greeting",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "chat_response",
                    "description": "Should respond with chat_response"
                  },
                  {
                    "field": "content",
                    "type": "exists",
                    "description": "Should have response content"
                  }
                ]
              }
            ]
          }
        ]
      }
    },

    {
      "type": "test_scenario", 
      "name": "TerminalBTAgent Integration Test",
      "description": "Validate TerminalBTAgent tool execution capabilities",
      "timeout": 15000,

      "tests": {
        "type": "sequence",
        "name": "terminal_integration_tests",
        "children": [
          {
            "type": "sequence",
            "name": "test_terminal_session_and_tools",
            "children": [
              {
                "type": "send_message",
                "name": "create_terminal_session",
                "targetAgent": "terminalAgent",
                "messageType": "session_create",
                "messageData": {
                  "requestId": "suite_terminal_session"
                },
                "waitForResponse": true,
                "responseTimeout": 5000
              },
              {
                "type": "assert_response",
                "name": "validate_terminal_session",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "tools_list_response",
                    "description": "Should create session and return tools"
                  },
                  {
                    "field": "tools",
                    "type": "exists",
                    "description": "Should provide tools list"
                  }
                ]
              },
              {
                "type": "send_message",
                "name": "ping_terminal",
                "targetAgent": "terminalAgent",
                "messageType": "ping",
                "messageData": {},
                "waitForResponse": true,
                "responseTimeout": 2000
              },
              {
                "type": "assert_response", 
                "name": "validate_terminal_ping",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "pong",
                    "description": "Should respond to ping with pong"
                  }
                ]
              }
            ]
          }
        ]
      }
    },

    {
      "type": "test_scenario",
      "name": "ArtifactBTAgent Integration Test", 
      "description": "Validate ArtifactBTAgent artifact management capabilities",
      "timeout": 12000,

      "tests": {
        "type": "sequence",
        "name": "artifact_integration_tests",
        "children": [
          {
            "type": "sequence",
            "name": "test_artifact_lifecycle",
            "children": [
              {
                "type": "send_message",
                "name": "get_initial_artifacts",
                "targetAgent": "artifactAgent",
                "messageType": "get_artifacts",
                "messageData": {},
                "waitForResponse": true,
                "responseTimeout": 3000
              },
              {
                "type": "assert_response",
                "name": "validate_initial_artifacts",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "artifacts_list",
                    "description": "Should return artifacts list"
                  }
                ]
              },
              {
                "type": "send_message",
                "name": "create_test_artifact",
                "targetAgent": "artifactAgent",
                "messageType": "artifact_created",
                "messageData": {
                  "artifact": {
                    "id": "suite_test_artifact",
                    "type": "text",
                    "label": "@suite_test",
                    "content": "This is a test artifact from the suite"
                  }
                },
                "waitForResponse": true,
                "responseTimeout": 5000
              },
              {
                "type": "send_message",
                "name": "sync_artifacts_test",
                "targetAgent": "artifactAgent", 
                "messageType": "sync_artifacts",
                "messageData": {},
                "waitForResponse": true,
                "responseTimeout": 5000
              },
              {
                "type": "assert_response",
                "name": "validate_artifact_sync",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "sync_complete",
                    "description": "Should complete artifact sync"
                  }
                ]
              }
            ]
          }
        ]
      }
    },

    {
      "type": "test_scenario",
      "name": "Cross-Agent Communication Test",
      "description": "Test interaction between multiple agents",
      "timeout": 25000,

      "tests": {
        "type": "sequence",
        "name": "cross_agent_tests",
        "children": [
          {
            "type": "sequence",
            "name": "test_chat_to_terminal_workflow",
            "description": "Test chat agent requesting tools through terminal agent",
            "children": [
              {
                "type": "send_message",
                "name": "chat_requests_file_operation",
                "targetAgent": "chatAgent",
                "messageType": "chat_message",
                "messageContent": "I need you to read a file using the terminal tools.",
                "messageData": {
                  "sessionId": "{{sharedSessionId}}",
                  "expectsToolExecution": true
                },
                "waitForResponse": true,
                "responseTimeout": 15000
              },
              {
                "type": "assert_response",
                "name": "validate_cross_agent_response",
                "dataSource": "lastResponse",
                "continueOnFailure": true,
                "assertions": [
                  {
                    "field": "type",
                    "type": "contains",
                    "expected": "response",
                    "description": "Should provide some form of response"
                  }
                ]
              }
            ]
          },

          {
            "type": "sequence",
            "name": "test_artifact_creation_from_chat",
            "description": "Test artifact creation triggered by chat interaction",
            "children": [
              {
                "type": "send_message",
                "name": "trigger_artifact_creation",
                "targetAgent": "artifactAgent",
                "messageType": "artifact_created",
                "messageData": {
                  "artifact": {
                    "id": "cross_agent_artifact",
                    "type": "code",
                    "label": "@cross_agent_test",
                    "content": "// Generated from cross-agent test\nfunction crossAgentTest() { return 'success'; }"
                  }
                },
                "waitForResponse": true,
                "responseTimeout": 5000
              },
              {
                "type": "send_message",
                "name": "verify_artifact_exists",
                "targetAgent": "artifactAgent",
                "messageType": "get_artifacts",
                "messageData": {},
                "waitForResponse": true,
                "responseTimeout": 3000
              },
              {
                "type": "assert_response",
                "name": "validate_cross_agent_artifact",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "artifacts",
                    "type": "exists",
                    "description": "Should have artifacts from cross-agent interaction"
                  }
                ]
              }
            ]
          }
        ]
      }
    },

    {
      "type": "test_scenario",
      "name": "Error Handling and Edge Cases Test",
      "description": "Test error handling across all agents", 
      "timeout": 15000,

      "tests": {
        "type": "sequence",
        "name": "error_handling_tests",
        "children": [
          {
            "type": "sequence",
            "name": "test_unknown_message_types",
            "description": "Send unknown message types to all agents",
            "children": [
              {
                "type": "send_message",
                "name": "unknown_message_to_chat",
                "targetAgent": "chatAgent",
                "messageType": "unknown_chat_message",
                "messageData": { "test": "error_handling" },
                "waitForResponse": true,
                "responseTimeout": 3000
              },
              {
                "type": "assert_response",
                "name": "validate_chat_error_handling",
                "dataSource": "lastResponse",
                "assertions": [
                  {
                    "field": "type",
                    "type": "equals",
                    "expected": "error",
                    "description": "Chat agent should handle unknown messages gracefully"
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  ],

  "teardown": {
    "type": "sequence",
    "name": "suite_teardown",
    "description": "Clean up shared test environment",
    "children": [
      {
        "type": "mock_environment",
        "name": "cleanup_shared_environment",
        "action": "teardown", 
        "environmentId": "shared_test_env"
      }
    ]
  },

  "reporting": {
    "generateReport": true,
    "reportFormat": "json",
    "includeDetailedResults": true,
    "includePerformanceMetrics": true
  },

  "metadata": {
    "author": "Legion BT Testing System",
    "created": "2024-01-01T00:00:00Z", 
    "tags": ["integration", "comprehensive", "all-agents", "cross-agent"],
    "requirements": [
      "All BT agents must be registered (chatAgent, terminalAgent, artifactAgent)",
      "Mock environments must be properly configured",
      "Shared resources should be available across tests"
    ],
    "expectedDuration": "45-60 seconds",
    "minimumSuccessRate": "85%"
  }
}