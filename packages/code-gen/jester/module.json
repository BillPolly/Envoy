{
  "name": "jester",
  "version": "1.0.0",
  "description": "Advanced Jest test wrapper with intelligent test analytics and TDD support",
  "type": "generic",
  "className": "JesterModule",
  "classPath": "src/JesterModule.js",
  "tools": [
    {
      "name": "run_tests",
      "description": "Execute Jest tests with advanced analytics and reporting",
      "inputSchema": {
        "type": "object",
        "properties": {
          "pattern": {
            "type": "string",
            "description": "Test file pattern to match (optional, runs all tests if not specified)"
          },
          "config": {
            "type": "object",
            "description": "Jest configuration options",
            "properties": {
              "collectCoverage": {
                "type": "boolean",
                "description": "Collect code coverage during test run"
              },
              "verbose": {
                "type": "boolean", 
                "description": "Enable verbose output"
              },
              "bail": {
                "type": "boolean",
                "description": "Stop after first test failure"
              }
            }
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Unique session identifier for this test run"
          },
          "summary": {
            "type": "object",
            "properties": {
              "totalTests": {"type": "number"},
              "passedTests": {"type": "number"}, 
              "failedTests": {"type": "number"},
              "skippedTests": {"type": "number"},
              "duration": {"type": "number"},
              "success": {"type": "boolean"}
            }
          },
          "coverage": {
            "type": "object",
            "description": "Code coverage information if enabled"
          }
        }
      }
    },
    {
      "name": "analyze_failures", 
      "description": "Analyze failed tests and provide actionable insights for TDD",
      "inputSchema": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "string",
            "description": "Session ID from a previous test run (optional, uses latest if not provided)"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["green", "red"],
            "description": "TDD status - green if all passing, red if failures"
          },
          "failures": {
            "type": "number",
            "description": "Number of failed tests"
          },
          "errorSummary": {
            "type": "object",
            "description": "Analysis of error patterns and types"
          },
          "suggestions": {
            "type": "array",
            "description": "Implementation suggestions based on failures"
          },
          "nextActions": {
            "type": "array",
            "description": "Prioritized list of actions to take"
          },
          "detailedFailures": {
            "type": "array",
            "description": "Detailed information about each failed test"
          }
        }
      }
    },
    {
      "name": "get_test_history",
      "description": "Get historical performance data for a specific test",
      "inputSchema": {
        "type": "object",
        "properties": {
          "testName": {
            "type": "string", 
            "description": "Full name of the test to analyze"
          }
        },
        "required": ["testName"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "totalRuns": {"type": "number"},
          "successRate": {"type": "number"},
          "averageDuration": {"type": "number"},
          "trend": {"type": "string"},
          "recommendation": {"type": "string"}
        }
      }
    },
    {
      "name": "search_logs",
      "description": "Search through test logs and console output",
      "inputSchema": {
        "type": "object", 
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query for log messages"
          },
          "sessionId": {
            "type": "string",
            "description": "Limit search to specific session (optional)"
          }
        },
        "required": ["query"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "matches": {
            "type": "array",
            "description": "Array of matching log entries with context"
          },
          "totalMatches": {"type": "number"}
        }
      }
    },
    {
      "name": "get_slowest_tests",
      "description": "Identify the slowest running tests for performance optimization",
      "inputSchema": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Number of slowest tests to return",
            "default": 10
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "tests": {
            "type": "array",
            "description": "Array of slowest tests with duration information"
          }
        }
      }
    },
    {
      "name": "get_common_errors",
      "description": "Get the most frequently occurring test errors",
      "inputSchema": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number", 
            "description": "Number of error types to return",
            "default": 10
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "Array of common errors with occurrence counts"
          }
        }
      }
    }
  ]
}