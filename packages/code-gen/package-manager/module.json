{
  "name": "package-manager",
  "version": "1.0.0", 
  "description": "Node.js package management tools for npm operations, dependency analysis, and package.json management",
  "type": "legion",
  "className": "PackageManagerModule",
  "classPath": "src/PackageManagerModule.js",
  "dependencies": {
    "semver": "^7.5.0",
    "zod": "^3.22.0"
  },
  "tools": [
    {
      "name": "install_package",
      "description": "Install a single npm package with version and dependency type options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Package name to install"
          },
          "version": {
            "type": "string",
            "description": "Package version or range (e.g., '1.0.0', '^1.0.0', 'latest')"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to the project directory"
          },
          "isDev": {
            "type": "boolean",
            "default": false,
            "description": "Install as dev dependency"
          },
          "registry": {
            "type": "string",
            "description": "Custom npm registry URL"
          }
        },
        "required": ["name", "projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "packageName": {"type": "string"},
          "status": {
            "type": "string",
            "enum": ["installed", "already-installed", "error"]
          },
          "version": {"type": "string"},
          "installationTime": {"type": "number"},
          "isDev": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "install_packages",
      "description": "Install multiple npm packages in batch",
      "inputSchema": {
        "type": "object",
        "properties": {
          "packages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {"type": "string"},
                "version": {"type": "string"},
                "isDev": {"type": "boolean", "default": false}
              },
              "required": ["name"]
            },
            "description": "Array of packages to install"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to the project directory"
          }
        },
        "required": ["packages", "projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "packageName": {"type": "string"},
                "status": {"type": "string"},
                "installationTime": {"type": "number"}
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total": {"type": "number"},
              "successful": {"type": "number"},
              "failed": {"type": "number"}
            }
          }
        }
      }
    },
    {
      "name": "create_package_json",
      "description": "Generate a package.json file with dependencies and scripts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Project name"
          },
          "version": {
            "type": "string",
            "default": "1.0.0",
            "description": "Project version"
          },
          "description": {
            "type": "string",
            "description": "Project description"
          },
          "main": {
            "type": "string",
            "default": "index.js",
            "description": "Main entry point"
          },
          "scripts": {
            "type": "object",
            "additionalProperties": {"type": "string"},
            "description": "NPM scripts"
          },
          "dependencies": {
            "type": "object",
            "additionalProperties": {"type": "string"},
            "description": "Production dependencies"
          },
          "devDependencies": {
            "type": "object",
            "additionalProperties": {"type": "string"},
            "description": "Development dependencies"
          },
          "keywords": {
            "type": "array",
            "items": {"type": "string"},
            "description": "Project keywords"
          },
          "author": {
            "type": "string",
            "description": "Project author"
          },
          "license": {
            "type": "string",
            "default": "ISC",
            "description": "Project license"
          },
          "projectPath": {
            "type": "string",
            "description": "Path where package.json should be created"
          }
        },
        "required": ["name", "projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "created": {"type": "boolean"},
          "path": {"type": "string"},
          "content": {"type": "object"},
          "message": {"type": "string"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "validate_package_json",
      "description": "Validate package.json format and semver versions",
      "inputSchema": {
        "type": "object",
        "properties": {
          "packageJson": {
            "type": "object",
            "description": "Package.json content to validate"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to project directory (alternative to packageJson)"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "valid": {"type": "boolean"},
          "errors": {
            "type": "array",
            "items": {"type": "string"}
          },
          "warnings": {
            "type": "array", 
            "items": {"type": "string"}
          }
        }
      }
    },
    {
      "name": "analyze_dependencies",
      "description": "Resolve dependency tree and detect version conflicts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectPath": {
            "type": "string",
            "description": "Path to project directory"
          },
          "includeDevDependencies": {
            "type": "boolean",
            "default": true,
            "description": "Include dev dependencies in analysis"
          }
        },
        "required": ["projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "tree": {"type": "object"},
          "conflicts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": {"type": "string"},
                "version": {"type": "string"},
                "conflictWith": {"type": "string"},
                "reason": {"type": "string"}
              }
            }
          },
          "hasConflicts": {"type": "boolean"},
          "summary": {
            "type": "object",
            "properties": {
              "totalPackages": {"type": "number"},
              "directDependencies": {"type": "number"},
              "devDependencies": {"type": "number"}
            }
          }
        }
      }
    },
    {
      "name": "analyze_security",
      "description": "Scan for security vulnerabilities using npm audit", 
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectPath": {
            "type": "string",
            "description": "Path to project directory"
          }
        },
        "required": ["projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "vulnerabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package": {"type": "string"},
                "severity": {"type": "string"},
                "title": {"type": "string"},
                "overview": {"type": "string"},
                "recommendation": {"type": "string"}
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total": {"type": "number"},
              "high": {"type": "number"},
              "moderate": {"type": "number"}, 
              "low": {"type": "number"}
            }
          },
          "riskLevel": {
            "type": "string",
            "enum": ["none", "low", "medium", "high", "unknown"]
          }
        }
      }
    },
    {
      "name": "add_npm_script",
      "description": "Add a script to package.json",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Script name"
          },
          "command": {
            "type": "string",
            "description": "Script command"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to project directory"
          }
        },
        "required": ["name", "command", "projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "added": {"type": "boolean"},
          "scriptName": {"type": "string"},
          "command": {"type": "string"},
          "error": {"type": "string"}
        }
      }
    },
    {
      "name": "run_npm_script",
      "description": "Execute an npm script",
      "inputSchema": {
        "type": "object",
        "properties": {
          "scriptName": {
            "type": "string",
            "description": "Name of script to run"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to project directory"
          },
          "timeout": {
            "type": "number",
            "default": 30000,
            "description": "Timeout in milliseconds"
          }
        },
        "required": ["scriptName", "projectPath"]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["completed", "failed", "error"]
          },
          "output": {"type": "string"},
          "error": {"type": "string"},
          "exitCode": {"type": "number"}
        }
      }
    }
  ]
}