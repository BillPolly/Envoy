{
  "name": "conan-the-deployer",
  "version": "1.0.0",
  "description": "Deploy and monitor Node.js applications across multiple providers",
  "package": "./src/ConanTheDeployer.js",
  "type": "constructor",
  "dependencies": {
    "RAILWAY_API_TOKEN": "optional",
    "DOCKER_HOST": "optional"
  },
  "initialization": {
    "type": "constructor",
    "config": {
      "defaultProvider": "local",
      "monitoringEnabled": true,
      "healthCheckInterval": 30000,
      "metricsInterval": 60000,
      "logBufferSize": 1000
    }
  },
  "tools": [
    {
      "name": "deploy_application",
      "description": "Deploy a Node.js application to specified provider",
      "function": "deployApplication",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "projectPath": {
            "type": "string",
            "description": "Path to the Node.js project directory"
          },
          "provider": {
            "type": "string",
            "enum": ["local", "docker", "railway"],
            "description": "Deployment provider to use"
          },
          "name": {
            "type": "string",
            "description": "Unique name for this deployment"
          },
          "config": {
            "type": "object",
            "description": "Provider-specific configuration",
            "properties": {
              "env": {
                "type": "object",
                "description": "Environment variables",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "port": {
                "type": "number",
                "description": "Preferred port number"
              },
              "startCommand": {
                "type": "string",
                "description": "Custom start command"
              },
              "buildCommand": {
                "type": "string",
                "description": "Build command to run before deployment"
              },
              "healthCheckPath": {
                "type": "string",
                "description": "HTTP path for health checks",
                "default": "/health"
              },
              "docker": {
                "type": "object",
                "description": "Docker-specific options",
                "properties": {
                  "dockerfile": {
                    "type": "string",
                    "description": "Path to Dockerfile"
                  },
                  "buildArgs": {
                    "type": "object",
                    "description": "Docker build arguments"
                  },
                  "network": {
                    "type": "string",
                    "description": "Docker network name"
                  }
                }
              },
              "railway": {
                "type": "object",
                "description": "Railway-specific options",
                "properties": {
                  "projectId": {
                    "type": "string",
                    "description": "Existing Railway project ID"
                  },
                  "environment": {
                    "type": "string",
                    "description": "Railway environment name",
                    "default": "production"
                  },
                  "region": {
                    "type": "string",
                    "description": "Deployment region"
                  }
                }
              }
            }
          }
        },
        "required": ["projectPath", "provider", "name"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Unique deployment identifier"
            },
            "name": {
              "type": "string",
              "description": "Deployment name"
            },
            "provider": {
              "type": "string",
              "description": "Provider used"
            },
            "status": {
              "type": "string",
              "enum": ["pending", "deploying", "running", "failed"],
              "description": "Current deployment status"
            },
            "url": {
              "type": "string",
              "description": "Access URL for the deployment"
            },
            "port": {
              "type": "number",
              "description": "Port number (for local/docker)"
            },
            "startTime": {
              "type": "string",
              "description": "Deployment start time"
            },
            "metadata": {
              "type": "object",
              "description": "Provider-specific metadata"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "details": {
              "type": "object",
              "description": "Additional error details"
            }
          }
        }
      }
    },
    {
      "name": "monitor_deployment",
      "description": "Monitor health and metrics of a deployment",
      "function": "monitorDeployment",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "description": "Deployment identifier to monitor"
          },
          "metrics": {
            "type": "array",
            "description": "Metrics to collect",
            "items": {
              "type": "string",
              "enum": ["health", "cpu", "memory", "requests", "errors"]
            },
            "default": ["health", "cpu", "memory"]
          },
          "interval": {
            "type": "number",
            "description": "Monitoring interval in milliseconds",
            "default": 30000
          },
          "duration": {
            "type": "number",
            "description": "Total monitoring duration in milliseconds (0 for continuous)",
            "default": 0
          }
        },
        "required": ["deploymentId"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Deployment being monitored"
            },
            "monitorId": {
              "type": "string",
              "description": "Monitor session identifier"
            },
            "timestamp": {
              "type": "string",
              "description": "Monitoring timestamp"
            },
            "health": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["healthy", "unhealthy", "unknown"],
                  "description": "Overall health status"
                },
                "checks": {
                  "type": "array",
                  "description": "Individual health check results"
                }
              }
            },
            "metrics": {
              "type": "object",
              "properties": {
                "cpu": {
                  "type": "object",
                  "properties": {
                    "usage": {
                      "type": "number",
                      "description": "CPU usage percentage"
                    },
                    "limit": {
                      "type": "number",
                      "description": "CPU limit"
                    }
                  }
                },
                "memory": {
                  "type": "object",
                  "properties": {
                    "usage": {
                      "type": "number",
                      "description": "Memory usage in MB"
                    },
                    "limit": {
                      "type": "number",
                      "description": "Memory limit in MB"
                    }
                  }
                },
                "requests": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "Total request count"
                    },
                    "rate": {
                      "type": "number",
                      "description": "Requests per second"
                    }
                  }
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "description": "Total error count"
                    },
                    "rate": {
                      "type": "number",
                      "description": "Errors per second"
                    }
                  }
                }
              }
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    },
    {
      "name": "update_deployment",
      "description": "Update an existing deployment with new code",
      "function": "updateDeployment",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "description": "Deployment to update"
          },
          "projectPath": {
            "type": "string",
            "description": "Path to updated project code"
          },
          "strategy": {
            "type": "string",
            "enum": ["rolling", "recreate", "blue-green"],
            "description": "Update strategy to use",
            "default": "rolling"
          },
          "config": {
            "type": "object",
            "description": "Updated configuration (merged with existing)"
          }
        },
        "required": ["deploymentId", "projectPath"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Updated deployment ID"
            },
            "previousVersion": {
              "type": "string",
              "description": "Previous version identifier"
            },
            "newVersion": {
              "type": "string",
              "description": "New version identifier"
            },
            "strategy": {
              "type": "string",
              "description": "Update strategy used"
            },
            "status": {
              "type": "string",
              "description": "Update status"
            },
            "updateTime": {
              "type": "string",
              "description": "Update timestamp"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "rollbackPerformed": {
              "type": "boolean",
              "description": "Whether rollback was attempted"
            }
          }
        }
      }
    },
    {
      "name": "list_deployments",
      "description": "List all deployments across providers",
      "function": "listDeployments",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "enum": ["all", "local", "docker", "railway"],
            "description": "Filter by provider",
            "default": "all"
          },
          "status": {
            "type": "string",
            "enum": ["all", "running", "stopped", "failed"],
            "description": "Filter by status",
            "default": "all"
          },
          "name": {
            "type": "string",
            "description": "Filter by deployment name (partial match)"
          }
        }
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deployments": {
              "type": "array",
              "description": "List of deployments",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Deployment ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Deployment name"
                  },
                  "provider": {
                    "type": "string",
                    "description": "Provider type"
                  },
                  "status": {
                    "type": "string",
                    "description": "Current status"
                  },
                  "url": {
                    "type": "string",
                    "description": "Access URL"
                  },
                  "startTime": {
                    "type": "string",
                    "description": "Start timestamp"
                  },
                  "uptime": {
                    "type": "number",
                    "description": "Uptime in milliseconds"
                  }
                }
              }
            },
            "total": {
              "type": "number",
              "description": "Total number of deployments"
            },
            "byProvider": {
              "type": "object",
              "description": "Count by provider",
              "additionalProperties": {
                "type": "number"
              }
            },
            "byStatus": {
              "type": "object",
              "description": "Count by status",
              "additionalProperties": {
                "type": "number"
              }
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    },
    {
      "name": "stop_deployment",
      "description": "Stop a running deployment",
      "function": "stopDeployment",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "description": "Deployment to stop"
          },
          "graceful": {
            "type": "boolean",
            "description": "Perform graceful shutdown",
            "default": true
          },
          "timeout": {
            "type": "number",
            "description": "Graceful shutdown timeout in milliseconds",
            "default": 30000
          }
        },
        "required": ["deploymentId"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Stopped deployment ID"
            },
            "status": {
              "type": "string",
              "description": "Final status"
            },
            "stoppedAt": {
              "type": "string",
              "description": "Stop timestamp"
            },
            "graceful": {
              "type": "boolean",
              "description": "Whether shutdown was graceful"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    },
    {
      "name": "get_deployment_logs",
      "description": "Retrieve logs from a deployment",
      "function": "getDeploymentLogs",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "description": "Deployment identifier"
          },
          "lines": {
            "type": "number",
            "description": "Number of log lines to retrieve",
            "default": 100
          },
          "follow": {
            "type": "boolean",
            "description": "Follow log stream in real-time",
            "default": false
          },
          "level": {
            "type": "string",
            "enum": ["all", "error", "warn", "info", "debug"],
            "description": "Filter by log level",
            "default": "all"
          },
          "since": {
            "type": "string",
            "description": "Timestamp to start from (ISO 8601)"
          }
        },
        "required": ["deploymentId"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Deployment ID"
            },
            "logs": {
              "type": "array",
              "description": "Log entries",
              "items": {
                "type": "object",
                "properties": {
                  "timestamp": {
                    "type": "string",
                    "description": "Log timestamp"
                  },
                  "level": {
                    "type": "string",
                    "description": "Log level"
                  },
                  "message": {
                    "type": "string",
                    "description": "Log message"
                  },
                  "source": {
                    "type": "string",
                    "description": "Log source"
                  }
                }
              }
            },
            "hasMore": {
              "type": "boolean",
              "description": "Whether more logs are available"
            },
            "streamId": {
              "type": "string",
              "description": "Stream ID for follow mode"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    },
    {
      "name": "remove_deployment",
      "description": "Remove a deployment and clean up resources",
      "function": "removeDeployment",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "deploymentId": {
            "type": "string",
            "description": "Deployment to remove"
          },
          "force": {
            "type": "boolean",
            "description": "Force removal even if running",
            "default": false
          },
          "cleanup": {
            "type": "boolean",
            "description": "Clean up associated resources",
            "default": true
          }
        },
        "required": ["deploymentId"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Removed deployment ID"
            },
            "cleanedResources": {
              "type": "array",
              "description": "List of cleaned resources",
              "items": {
                "type": "string"
              }
            },
            "removedAt": {
              "type": "string",
              "description": "Removal timestamp"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    }
  ]
}