{
  "name": "javascript-development-dynamic",
  "toolName": "javascript_development_dynamic_planner",
  "description": "Comprehensive JavaScript development planner with dynamic tool loading",
  "requiredModules": [
    "file",
    "command-executor",
    "node-runner",
    "jester",
    "js-generator",
    "code-analysis"
  ],
  "allowedTools": [
    "file_read",
    "file_write",
    "directory_create",
    "directory_current",
    "directory_list",
    "directory_change",
    "generate_javascript_module",
    "generate_javascript_function",
    "generate_javascript_class",
    "generate_api_endpoint",
    "generate_event_handler",
    "generate_unit_tests",
    "validate_javascript_syntax",
    "generate_html_page",
    "create_file",
    "node_run_command",
    "run_command"
  ],
  "defaultInputs": [
    "user_request",
    "project_context",
    "project_type"
  ],
  "defaultOutputs": [],
  "maxSteps": 20,
  "contextPrompts": [
    "You are an expert JavaScript developer creating production-ready applications.",
    "Always follow modern JavaScript/Node.js best practices and conventions.",
    "Create proper project structure with package.json, README, and organized source files.",
    "To create a package.json file, use file_write with proper JSON content like:",
    "{",
    "  \"name\": \"project-name\",",
    "  \"version\": \"1.0.0\",",
    "  \"description\": \"Project description\",",
    "  \"main\": \"index.js\",",
    "  \"scripts\": {",
    "    \"start\": \"node index.js\",",
    "    \"test\": \"jest\",",
    "    \"dev\": \"nodemon index.js\"",
    "  },",
    "  \"dependencies\": {},",
    "  \"devDependencies\": {}",
    "}",
    "Write clean, modular, well-documented code with proper error handling.",
    "Include comprehensive tests using Jest or similar testing framework.",
    "Use semantic versioning and proper dependency management.",
    "Always create directories before writing files into them.",
    "Test the application thoroughly before considering it complete.",
    "Include proper .gitignore and environment configuration files.",
    "Follow security best practices - never commit secrets or API keys."
  ]
}