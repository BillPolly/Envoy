{
  "name": "playwright",
  "version": "1.0.0",
  "description": "Browser automation and web testing using Playwright",
  "package": "./src/PlaywrightWrapper.js",
  "type": "constructor",
  "dependencies": {},
  "initialization": {
    "type": "constructor",
    "config": {
      "browserType": "chromium",
      "headless": true,
      "timeout": 30000
    }
  },
  "tools": [
    {
      "name": "navigate_to_page",
      "description": "Navigate to a web page and wait for it to load completely",
      "function": "navigateToPage",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to navigate to"
          },
          "waitUntil": {
            "type": "string",
            "enum": ["load", "networkidle", "domcontentloaded"],
            "default": "load",
            "description": "When to consider navigation complete"
          },
          "timeout": {
            "type": "number",
            "default": 30000,
            "description": "Timeout in milliseconds"
          }
        },
        "required": ["url"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "The final URL after navigation"
            },
            "title": {
              "type": "string",
              "description": "The page title"
            },
            "status": {
              "type": "number",
              "description": "HTTP status code"
            },
            "loadTime": {
              "type": "number",
              "description": "Time taken to load the page in milliseconds"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "url": {
              "type": "string",
              "description": "The URL that failed to load"
            }
          }
        }
      }
    },
    {
      "name": "click_element",
      "description": "Click on an element using various selector strategies",
      "function": "clickElement",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "selector": {
            "type": "string",
            "description": "CSS selector, XPath, text content, or data-testid to find element"
          },
          "clickType": {
            "type": "string",
            "enum": ["single", "double", "right"],
            "default": "single",
            "description": "Type of click to perform"
          },
          "waitForElement": {
            "type": "boolean",
            "default": true,
            "description": "Whether to wait for element to be visible before clicking"
          },
          "timeout": {
            "type": "number",
            "default": 10000,
            "description": "Timeout in milliseconds"
          }
        },
        "required": ["selector"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "The selector that was clicked"
            },
            "clickType": {
              "type": "string",
              "description": "Type of click performed"
            },
            "elementText": {
              "type": "string",
              "description": "Text content of the clicked element"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "selector": {
              "type": "string",
              "description": "The selector that failed"
            }
          }
        }
      }
    },
    {
      "name": "fill_form",
      "description": "Fill out a form with provided data and optionally submit it",
      "function": "fillForm",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "formData": {
            "type": "object",
            "description": "Object mapping field selectors to values",
            "additionalProperties": {
              "type": "string"
            }
          },
          "submitForm": {
            "type": "boolean",
            "default": false,
            "description": "Whether to submit the form after filling"
          },
          "clearFirst": {
            "type": "boolean",
            "default": true,
            "description": "Whether to clear fields before filling"
          },
          "timeout": {
            "type": "number",
            "default": 10000,
            "description": "Timeout in milliseconds"
          }
        },
        "required": ["formData"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "fieldsProcessed": {
              "type": "number",
              "description": "Number of fields processed"
            },
            "results": {
              "type": "object",
              "description": "Results for each field"
            },
            "submitResult": {
              "type": "object",
              "description": "Result of form submission if requested"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "formData": {
              "type": "object",
              "description": "The form data that failed"
            }
          }
        }
      }
    },
    {
      "name": "take_screenshot",
      "description": "Take a screenshot of the current page or specific element",
      "function": "takeScreenshot",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "selector": {
            "type": "string",
            "description": "Optional selector to screenshot specific element"
          },
          "fullPage": {
            "type": "boolean",
            "default": false,
            "description": "Whether to capture the full page"
          },
          "format": {
            "type": "string",
            "enum": ["png", "jpeg"],
            "default": "png",
            "description": "Image format"
          },
          "quality": {
            "type": "number",
            "default": 80,
            "minimum": 1,
            "maximum": 100,
            "description": "Image quality (1-100, only for JPEG)"
          }
        }
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "screenshot": {
              "type": "string",
              "description": "Base64-encoded screenshot image"
            },
            "format": {
              "type": "string",
              "description": "Image format used"
            },
            "selector": {
              "type": "string",
              "description": "Selector used for element screenshot"
            },
            "fullPage": {
              "type": "boolean",
              "description": "Whether full page was captured"
            },
            "timestamp": {
              "type": "string",
              "description": "When the screenshot was taken"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "selector": {
              "type": "string",
              "description": "The selector that failed"
            }
          }
        }
      }
    },
    {
      "name": "extract_data",
      "description": "Extract structured data from the page using CSS selectors",
      "function": "extractData",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "selectors": {
            "type": "object",
            "description": "Object mapping data keys to CSS selectors",
            "additionalProperties": {
              "type": "string"
            }
          },
          "multiple": {
            "type": "boolean",
            "default": false,
            "description": "Whether to extract multiple items for each selector"
          },
          "waitForContent": {
            "type": "boolean",
            "default": true,
            "description": "Whether to wait for page content to load"
          }
        },
        "required": ["selectors"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "description": "Extracted data mapped by keys"
            },
            "url": {
              "type": "string",
              "description": "URL where data was extracted from"
            },
            "extractedAt": {
              "type": "string",
              "description": "When the data was extracted"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "selectors": {
              "type": "object",
              "description": "The selectors that failed"
            }
          }
        }
      }
    },
    {
      "name": "wait_for_element",
      "description": "Wait for an element to appear, disappear, or change state",
      "function": "waitForElement",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "selector": {
            "type": "string",
            "description": "CSS selector to wait for"
          },
          "state": {
            "type": "string",
            "enum": ["visible", "hidden", "attached", "detached"],
            "default": "visible",
            "description": "Element state to wait for"
          },
          "timeout": {
            "type": "number",
            "default": 10000,
            "description": "Timeout in milliseconds"
          },
          "stable": {
            "type": "boolean",
            "default": false,
            "description": "Whether to wait for element to be stable (not moving)"
          }
        },
        "required": ["selector"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "selector": {
              "type": "string",
              "description": "The selector that was waited for"
            },
            "state": {
              "type": "string",
              "description": "The state that was achieved"
            },
            "isVisible": {
              "type": "boolean",
              "description": "Whether the element is visible"
            },
            "text": {
              "type": "string",
              "description": "Text content of the element"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "selector": {
              "type": "string",
              "description": "The selector that failed"
            }
          }
        }
      }
    },
    {
      "name": "execute_script",
      "description": "Execute JavaScript code in the browser context",
      "function": "executeScript",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {
          "script": {
            "type": "string",
            "description": "JavaScript code to execute"
          },
          "args": {
            "type": "array",
            "description": "Arguments to pass to the script",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["script"]
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "result": {
              "type": "string",
              "description": "Result of the script execution"
            },
            "script": {
              "type": "string",
              "description": "The script that was executed (truncated)"
            },
            "executedAt": {
              "type": "string",
              "description": "When the script was executed"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            },
            "script": {
              "type": "string",
              "description": "The script that failed"
            }
          }
        }
      }
    },
    {
      "name": "get_page_info",
      "description": "Get information about the current page",
      "function": "getPageInfo",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {}
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string",
              "description": "Current page URL"
            },
            "title": {
              "type": "string",
              "description": "Page title"
            },
            "viewport": {
              "type": "object",
              "description": "Viewport dimensions"
            },
            "userAgent": {
              "type": "string",
              "description": "User agent string"
            },
            "cookies": {
              "type": "array",
              "description": "Current cookies"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    },
    {
      "name": "close_browser",
      "description": "Close the browser and clean up resources",
      "function": "close",
      "instanceMethod": true,
      "async": true,
      "parameters": {
        "type": "object",
        "properties": {}
      },
      "output": {
        "success": {
          "type": "object",
          "properties": {
            "closedAt": {
              "type": "string",
              "description": "When the browser was closed"
            }
          }
        },
        "failure": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "Error message"
            }
          }
        }
      }
    }
  ]
}