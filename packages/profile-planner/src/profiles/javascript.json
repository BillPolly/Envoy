{
  "name": "javascript",
  "toolName": "javascript_planner",
  "description": "Plan JavaScript and Node.js development tasks with testing",
  "requiredModules": ["file", "node-runner"],
  "defaultInputs": ["user_request", "project_context"],
  "defaultOutputs": ["file_created", "project_created", "test_results"],
  "maxSteps": 25,
  "contextPrompts": [
    "You are working in a JavaScript/Node.js development environment.",
    "Use modern JavaScript ES6+ syntax including const/let, arrow functions, and modules.",
    "When creating functions, include proper JSDoc comments.",
    "For testing, use Jest as the testing framework unless specified otherwise.",
    "Test files should be named with .test.js suffix.",
    "Follow Node.js best practices for file organization.",
    "Include error handling in your code.",
    "When creating package.json, include appropriate scripts for testing and running code.",
    "Use Legion tools: file_write for creating files, file_read for reading files, node_run_command for executing commands."
  ],
  "allowableActions": [
    {
      "type": "create_js_file",
      "description": "Create a JavaScript file with specified content",
      "inputs": {
        "file_path": {
          "type": "string",
          "description": "Relative path from project root where file should be created (e.g., 'src/calculator.js')",
          "examples": ["src/index.js", "lib/utils.js", "test/helper.js"]
        },
        "content": {
          "type": "string",
          "description": "JavaScript code content to write to the file, properly formatted with appropriate imports, exports, and comments"
        }
      },
      "outputs": {
        "file_created": {
          "type": "string",
          "description": "Path to the created file"
        }
      }
    },
    {
      "type": "read_js_file",
      "description": "Read the contents of a JavaScript file",
      "inputs": {
        "file_path": {
          "type": "string",
          "description": "Relative path to the JavaScript file to read"
        }
      },
      "outputs": {
        "file_content": {
          "type": "string",
          "description": "Content of the JavaScript file"
        }
      }
    },
    {
      "type": "create_package_json",
      "description": "Create a package.json file for a Node.js project",
      "inputs": {
        "project_name": {
          "type": "string",
          "description": "Name of the Node.js project (lowercase, no spaces)",
          "examples": ["my-calculator", "simple-app", "test-project"]
        },
        "dependencies": {
          "type": "object",
          "description": "Object mapping package names to version strings",
          "examples": [{"jest": "^29.0.0", "express": "^4.18.0"}]
        }
      },
      "outputs": {
        "package_json_created": {
          "type": "boolean",
          "description": "True if package.json was successfully created"
        }
      }
    },
    {
      "type": "create_test_file",
      "description": "Create a Jest test file for testing JavaScript functions",
      "inputs": {
        "test_file_path": {
          "type": "string",
          "description": "Path where test file should be created (must end with .test.js)",
          "examples": ["src/calculator.test.js", "test/utils.test.js"]
        },
        "function_to_test": {
          "type": "string",
          "description": "Complete test code including imports, describe blocks, and test cases"
        }
      },
      "outputs": {
        "test_file_created": {
          "type": "string",
          "description": "Path to the created test file"
        }
      }
    },
    {
      "type": "install_npm_packages",
      "description": "Install npm packages using npm install",
      "inputs": {
        "package_names": {
          "type": "array",
          "description": "Array of npm package names to install",
          "examples": [["jest"], ["express", "body-parser"], ["@types/node"]]
        }
      },
      "outputs": {
        "packages_installed": {
          "type": "boolean",
          "description": "True if all packages were successfully installed"
        }
      }
    },
    {
      "type": "run_node_script",
      "description": "Execute a Node.js script and capture its output",
      "inputs": {
        "script_path": {
          "type": "string",
          "description": "Relative path to the Node.js script to execute",
          "examples": ["src/index.js", "scripts/build.js"]
        }
      },
      "outputs": {
        "script_output": {
          "type": "string",
          "description": "Console output from the executed script"
        }
      }
    },
    {
      "type": "run_npm_test",
      "description": "Run npm test command to execute Jest tests",
      "inputs": {
        "test_pattern": {
          "type": "string",
          "description": "Pattern to match test files (optional, runs all tests if not specified)",
          "required": false,
          "examples": ["calculator.test.js", "src/*.test.js"]
        }
      },
      "outputs": {
        "test_results": {
          "type": "object",
          "description": "Test execution results including passed/failed counts and any errors"
        }
      }
    },
    {
      "type": "run_javascript_code",
      "description": "Execute JavaScript code directly in Node.js runtime",
      "inputs": {
        "js_code": {
          "type": "string",
          "description": "JavaScript code to execute (can include console.log statements)"
        }
      },
      "outputs": {
        "execution_result": {
          "type": "string",
          "description": "Output from code execution including console.log outputs"
        }
      }
    },
    {
      "type": "create_project_structure",
      "description": "Create a basic Node.js project structure with standard directories",
      "inputs": {
        "project_name": {
          "type": "string",
          "description": "Name of the project (will create a directory with this name)",
          "examples": ["my-app", "calculator-project"]
        }
      },
      "outputs": {
        "project_created": {
          "type": "object",
          "description": "Details about created project structure including directories created"
        }
      }
    },
    {
      "type": "setup_testing_environment",
      "description": "Configure testing environment for the project",
      "inputs": {
        "testing_framework": {
          "type": "string",
          "description": "Testing framework to set up",
          "examples": ["jest", "mocha", "jasmine"],
          "default": "jest"
        }
      },
      "outputs": {
        "testing_setup": {
          "type": "boolean",
          "description": "True if testing environment was successfully configured"
        }
      }
    }
  ],
  "templates": {
    "simpleFunction": "/**\n * {{FUNCTION_DESCRIPTION}}\n * @param {{PARAM_TYPE}} {{PARAM_NAME}} - {{PARAM_DESCRIPTION}}\n * @returns {{RETURN_TYPE}} {{RETURN_DESCRIPTION}}\n */\nconst {{FUNCTION_NAME}} = ({{PARAMETERS}}) => {\n  {{FUNCTION_BODY}}\n};\n\nmodule.exports = {{FUNCTION_NAME}};",
    "jestTest": "const {{MODULE_NAME}} = require('{{MODULE_PATH}}');\n\ndescribe('{{DESCRIBE_NAME}}', () => {\n  test('{{TEST_DESCRIPTION}}', () => {\n    {{TEST_BODY}}\n  });\n});"
  }
}