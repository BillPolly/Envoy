{
  "name": "SimpleClassGenerator", 
  "description": "Basic class generation with tests (no self-correction)",
  "version": "1.0.0",
  "input": {
    "className": {
      "type": "string",
      "required": true,
      "description": "Name of the class to generate"
    },
    "description": {
      "type": "string", 
      "required": false,
      "description": "Description of what the class does"
    },
    "methods": {
      "type": "array",
      "required": true, 
      "description": "List of method names to implement"
    }
  },
  "output": {
    "classCode": {
      "type": "string",
      "description": "Generated class code"
    },
    "testCode": {
      "type": "string",
      "description": "Generated test code"
    },
    "filePath": {
      "type": "string", 
      "description": "Path to the generated class file"
    },
    "testPath": {
      "type": "string",
      "description": "Path to the generated test file"
    }
  },
  "implementation": {
    "type": "sequence",
    "children": [
      {
        "id": "generate-class",
        "type": "action", 
        "tool": "classGenerator",
        "description": "Generate the JavaScript class",
        "params": {
          "className": "{{className}}",
          "description": "{{description}}",
          "methods": "{{methods}}"
        }
      },
      {
        "id": "generate-tests",
        "type": "action",
        "tool": "testGenerator", 
        "description": "Generate test file for the class",
        "params": {
          "className": "{{className}}",
          "methods": "{{methods}}"
        }
      }
    ]
  },
  "metadata": {
    "author": "RecursivePlanner BT Framework",
    "createdAt": "2025-01-06",
    "tags": ["code-generation", "testing", "development"],
    "category": "development-tools",
    "examples": [
      {
        "input": {
          "className": "DataModel",
          "description": "Data model class",
          "methods": ["validate", "serialize", "deserialize"]
        },
        "expectedOutput": {
          "classCode": "class DataModel { ... }",
          "testCode": "describe('DataModel', () => { ... })"
        }
      }
    ]
  }
}